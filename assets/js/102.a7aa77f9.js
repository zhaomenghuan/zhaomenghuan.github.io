(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{366:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"node-js-语法基础-——-buffter-stream"}},[t._v("Node.js 语法基础 ——\b Buffter & Stream")]),t._v(" "),s("h2",{attrs:{id:"前言"}},[t._v("前言")]),t._v(" "),s("p",[t._v("Buffter 与 Stream 对于 Node.js 的初学者来说极其容易迷糊，通过对比学习我们可以更好的分清楚他们的区别。")]),t._v(" "),s("h2",{attrs:{id:"buffter-缓冲器"}},[t._v("Buffter(缓冲器)")]),t._v(" "),s("p",[t._v("在引入 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/TypedArray",target:"_blank",rel:"noopener noreferrer"}},[t._v("TypedArray"),s("OutboundLink")],1),t._v(" 之前，JavaScript 没有读取或操作二进制数据流的机制。 Buffer 类用于在 TCP 流或文件系统操作等场景中处理字节流。")]),t._v(" "),s("p",[t._v("现在有了 TypedArray，Buffer 类以一种更优化、更适合 Node.js 的方式实现了 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",target:"_blank",rel:"noopener noreferrer"}},[t._v("Uint8Array"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("Buffer 类的实例类似于整数数组，但 Buffer 的大小是固定的、且在 V8 堆外分配物理内存。 Buffer 的大小在创建时确定，且无法改变。")]),t._v(" "),s("p",[t._v("Buffer 类是一个全局变量，使用时无需 require('buffer').Buffer。")]),t._v(" "),t._m(0),s("h3",{attrs:{id:"buffer-与迭代器"}},[t._v("Buffer 与迭代器")]),t._v(" "),s("p",[t._v("Buffer 可以使用 for..of 进行迭代：")]),t._v(" "),t._m(1),s("p",[t._v("还可以使用 buf.values()、buf.keys()、与 buf.entries() 创建迭代器。")]),t._v(" "),s("h3",{attrs:{id:"buffer-类"}},[t._v("Buffer 类")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),s("p",[t._v("创建一个大小为 size 字节的 Buffer。 如果 fill 为 undefined，则用 0 填充 Buffer。")]),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("比较 buf1 与 buf2，主要用于 Buffer 数组的排序。 相当于调用 buf1.compare(buf2)。")]),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._v(" "),s("p",[t._v("返回一个合并了 list 中所有 Buffer 的新 Buffer。")]),t._v(" "),s("p",[t._v("如果 list 中没有元素、或 totalLength 为 0，则返回一个长度为 0 的 Buffer。如果没有指定 totalLength，则计算 list 中的 Buffer 的总长度。如果 list 中的 Buffer 的总长度大于 totalLength，则合并后的 Buffer 会被截断到 totalLength 的长度。")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),s("p",[t._v("使用字节数组 array 创建 Buffer。")]),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),s("p",[t._v("创建 ArrayBuffer 的视图，但不会拷贝底层内存。例如，当传入 TypedArray 的 .buffer 属性的引用时，新建的 Buffer 会与 TypedArray 共享同一内存。")]),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),s("p",[t._v("拷贝 buffer 的数据到新建的 Buffer。")]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),s("p",[t._v("将 Base64 编码的字符串转成 十六进制 的字符串：")]),t._v(" "),t._m(20),t._m(21),t._v(" "),t._m(22),t._v(" "),s("p",[t._v("如果 obj 是一个 Buffer，则返回 true，否则返回 false。")]),t._v(" "),s("h2",{attrs:{id:"stream（流）"}},[t._v("Stream（流）")]),t._v(" "),s("p",[t._v("Stream（流）是 Node.js 中处理流式数据的抽象接口。 Stream 模块用于构建实现了流接口的对象。")]),t._v(" "),s("p",[t._v("Node.js 提供了多种流对象。 例如，"),s("a",{attrs:{href:"http://nodejs.cn/api/http.html#http_class_http_incomingmessage",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP 服务器的请求"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"http://nodejs.cn/api/process.html#process_process_stdout",target:"_blank",rel:"noopener noreferrer"}},[t._v("process.stdout"),s("OutboundLink")],1),t._v(" 都是流的实例。")]),t._v(" "),s("p",[t._v("流可以是可读的、可写的、或者可读可写的。 所有的流都是 "),s("a",{attrs:{href:"http://nodejs.cn/api/events.html#events_class_eventemitter",target:"_blank",rel:"noopener noreferrer"}},[t._v("EventEmitter"),s("OutboundLink")],1),t._v(" 的实例。")]),t._v(" "),s("h3",{attrs:{id:"流的类型"}},[t._v("流的类型")]),t._v(" "),s("p",[t._v("Node.js 中有四种基本的流类型：")]),t._v(" "),t._m(23),t._v(" "),s("h3",{attrs:{id:"可读流"}},[t._v("可读流")]),t._v(" "),s("p",[t._v("可读流是对提供数据的来源的一种抽象。")]),t._v(" "),s("p",[t._v("可读流的例子包括：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://nodejs.cn/api/http.html#http_class_http_incomingmessage",target:"_blank",rel:"noopener noreferrer"}},[t._v("客户端的 HTTP 响应"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api/http.html#http_class_http_incomingmessage",target:"_blank",rel:"noopener noreferrer"}},[t._v("服务器的 HTTP 请求"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api/fs.html#fs_class_fs_readstream",target:"_blank",rel:"noopener noreferrer"}},[t._v("fs 的读取流"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api/zlib.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("zlib 流"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api/crypto.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("crypto 流"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api/net.html#net_class_net_socket",target:"_blank",rel:"noopener noreferrer"}},[t._v("TCP socket"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api/child_process.html#child_process_subprocess_stdout",target:"_blank",rel:"noopener noreferrer"}},[t._v("子进程 stdout 与 stderr"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api/process.html#process_process_stdin",target:"_blank",rel:"noopener noreferrer"}},[t._v("process.stdin"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("所有可读流都实现了 "),s("a",{attrs:{href:"http://nodejs.cn/api/stream.html#stream_class_stream_readable",target:"_blank",rel:"noopener noreferrer"}},[t._v("stream.Readable"),s("OutboundLink")],1),t._v(" 类定义的接口。")]),t._v(" "),t._m(24),s("p",[t._v("完整的可以参考："),s("a",{attrs:{href:"https://github.com/jabez128/stream-handbook",target:"_blank",rel:"noopener noreferrer"}},[t._v("stream-handbook"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"buffer-与-stream-之间的转换"}},[t._v("Buffer 与 Stream 之间的转换")]),t._v(" "),s("h3",{attrs:{id:"stream-to-buffer"}},[t._v("Stream to Buffer")]),t._v(" "),s("p",[t._v("Stream 最有效的操作是将它们传输到另一个流。这在文件系统操作中很常见，但是在处理 HTTP 请求时，我们可能希望直接将响应流转换为 JSON 对象或解析 url 编码的值。这个时候我们可以将 Stream 读取到缓冲区，将 Stream 对象转换成 Buffer 对象。")]),t._v(" "),t._m(25),s("p",[t._v("此函数获取流（可能来自 HTTP 或 FS 访问）。 然后它会将每个 Buffer push 置于 Buffers 数组。 当流已被完全读取时，它将所有这些缓冲区与 Buffer.concat 组合在一起。这显然会导致大流的一些问题，但它适用于需要在应用程序的后续部分中在内存中转换和携带的小流。")]),t._v(" "),s("h3",{attrs:{id:"buffer-to-stream"}},[t._v("Buffer to Stream")]),t._v(" "),t._m(26),s("p",[t._v("此操作创建双工字符串，并简单地将缓冲区写入其中。 流现在可以用作通常的任何写流。")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[t._v("参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"http://nodejs.cn/api/buffer.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Buffer（缓冲器）"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://nodejs.cn/api/stream.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Stream（流）"),s("OutboundLink")],1)])]),t._v(" "),s("BlogFooter")],1)}),[function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个长度为 10、且用 0 填充的 Buffer。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个长度为 10、且用 0x1 填充的 Buffer。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个长度为 10、且未初始化的 Buffer。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个方法比调用 Buffer.alloc() 更快，但返回的 Buffer 实例可能包含旧数据，因此需要使用 fill() 或 write() 重写。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocUnsafe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个包含 [0x1, 0x2, 0x3] 的 Buffer。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个包含 UTF-8 字节 [0x74, 0xc3, 0xa9, 0x73, 0x74] 的 Buffer。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tést"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个包含 Latin-1 字节 [0x74, 0xe9, 0x73, 0x74] 的 Buffer。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tést"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"binary"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   3")]),t._v("\n")])])])},function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("Buffer.alloc(size[, fill[, encoding]])")])])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[t._v("size "),s("code",[t._v("<integer>")]),t._v(" 新建的 Buffer 的长度。")]),t._v(" "),s("li",[t._v("fill "),s("code",[t._v("<string>")]),t._v(" | "),s("code",[t._v("<Buffer>")]),t._v(" | "),s("code",[t._v("<integer>")]),t._v(" 预填充 Buffer 的值。默认为 0。")]),t._v(" "),s("li",[t._v("encoding "),s("code",[t._v("<string>")]),t._v(" 如果 fill 是字符串，则指定 fill 的字符编码。默认为 'utf8'。")])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出: <Buffer 00 00 00 00 00>")]),t._v("\n")])])])},function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("Buffer.compare(buf1, buf2)")])])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[t._v("buf1 "),s("code",[t._v("<Buffer>")]),t._v(" | "),s("code",[t._v("<Uint8Array>")])]),t._v(" "),s("li",[t._v("buf2 "),s("code",[t._v("<Buffer>")]),t._v(" | "),s("code",[t._v("<Uint8Array>")])]),t._v(" "),s("li",[t._v("返回: "),s("code",[t._v("<integer>")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1234"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"0123"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("buf1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buf2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sort")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("compare"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出: [ <Buffer 30 31 32 33>, <Buffer 31 32 33 34> ]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (相当于: [buf2, buf1])")]),t._v("\n")])])])},function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("Buffer.concat(list[, totalLength])")])])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[t._v("list "),s("code",[t._v("<Buffer[]>")]),t._v(" | "),s("code",[t._v("<Uint8Array[]>")]),t._v(" 要合并的 Buffer 数组或 Uint8Array 数组。")]),t._v(" "),s("li",[t._v("totalLength "),s("code",[t._v("<integer>")]),t._v(" 合并后 Buffer 的总长度。")]),t._v(" "),s("li",[t._v("返回: "),s("code",[t._v("<Buffer>")])])])},function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("Buffer.from(array)")])])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("array "),t("code",[this._v("<integer[]>")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个包含字符串 'buffer' 的 UTF-8 字节的 Buffer。")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x62")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x75")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x66")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x66")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x72")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("Buffer.from(arrayBuffer[, byteOffset[, length]])")])])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[t._v("arrayBuffer "),s("code",[t._v("<ArrayBuffer>")]),t._v(" | "),s("code",[t._v("<SharedArrayBuffer>")]),t._v(" ArrayBuffer 或 SharedArrayBuffer，或 TypedArray 的 .buffer 属性。")]),t._v(" "),s("li",[t._v("byteOffset "),s("code",[t._v("<integer>")]),t._v(" 开始拷贝的索引。默认为 0。")]),t._v(" "),s("li",[t._v("length "),s("code",[t._v("<integer>")]),t._v(" 拷贝的字节数。默认为 arrayBuffer.length - byteOffset。")])])},function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("Buffer.from(buffer)")])])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("buffer "),t("code",[this._v("<Buffer>")]),this._v(" | "),t("code",[this._v("<Uint8Array>")]),this._v(" 要拷贝数据的 Buffer 或 Uint8Array。")])])},function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("Buffer.from(string[, encoding])")])])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("string "),t("code",[this._v("<string>")]),this._v(" 要编码的字符串。")]),this._v(" "),t("li",[this._v("encoding "),t("code",[this._v("<string>")]),this._v(" string 的字符编码。默认为 'utf8'。")])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello world"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"utf-8"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer 68 65 6c 6c 6f 20 77 6f 72 6c 64>")]),t._v("\n")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// input: zX9FsUTWFHFJgauH9P4u359essv+p1BKEXck4wuqAr0=")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output: cd7f45b144d614714981ab87f4fe2edf9f5eb2cbfea7504a117724e30baa02bd")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zX9FsUTWFHFJgauH9P4u359essv+p1BKEXck4wuqAr0="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" output "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'base64'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("Buffer.isBuffer(obj)")])])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("obj "),t("code",[this._v("<Object>")])]),this._v(" "),t("li",[this._v("返回: "),t("code",[this._v("<boolean>")])])])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("Writable - 可写入数据的流（例如 fs.createWriteStream()）。")]),this._v(" "),t("li",[this._v("Readable - 可读取数据的流（例如 fs.createReadStream()）。")]),this._v(" "),t("li",[this._v("Duplex - 可读又可写的流（例如 net.Socket）。")]),this._v(" "),t("li",[this._v("Transform - 在读写过程中可以修改或转换数据的 Duplex 流（例如 zlib.createDeflate()）。")])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" stream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo.txt"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"readable"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token template-string"}},[s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("读取的数据: ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("read")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"end"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"结束"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   读取的数据: hello world")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   读取的数据: null")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   结束")]),t._v("\n")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("streamToBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("stream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" buffers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" buffers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" Duplex "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stream"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duplex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bufferToStream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("buffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" stream "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Duplex")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],!1,null,null,null);s.default=e.exports}}]);