(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{160:function(t,s,n){t.exports=n.p+"assets/img/esp8266-pin.f742972d.png"},161:function(t,s,n){t.exports=n.p+"assets/img/nodemcu-pin.73c3df44.png"},162:function(t,s,n){t.exports=n.p+"assets/img/nodemcu-pin2.462e0489.png"},163:function(t,s,n){t.exports=n.p+"assets/img/nodemcu-led.550febfe.png"},164:function(t,s,n){t.exports=n.p+"assets/img/esp-12-gpio2.f3cad430.png"},165:function(t,s,n){t.exports=n.p+"assets/img/nodemcu-gpio16.29cefa45.png"},166:function(t,s,n){t.exports=n.p+"assets/img/pwm.d65155dd.gif"},167:function(t,s,n){t.exports=n.p+"assets/img/nodemcu_pwm_pins.63068462.png"},168:function(t,s,n){t.exports=n.p+"assets/img/nodemcu-rgb.7cb7c6d4.png"},169:function(t,s,n){t.exports=n.p+"assets/img/pwm_init.2f95ec15.png"},170:function(t,s,n){t.exports=n.p+"assets/img/pwm_start.1621dbbf.png"},171:function(t,s,n){t.exports=n.p+"assets/img/pwm_set_duty.b4c029ed.png"},332:function(t,s,n){"use strict";n.r(s);var a=[function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(160),alt:""}})])},function(){var t=this,s=t._self._c;return s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[s("strong",[t._v("管脚")])]),t._v(" "),s("th",{staticStyle:{"text-align":"left"}},[s("strong",[t._v("名称")])]),t._v(" "),s("th",[s("strong",[t._v("类型")])]),t._v(" "),s("th",[s("strong",[t._v("功能")])])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("VDDA")]),t._v(" "),s("td",[t._v("P")]),t._v(" "),s("td",[t._v("模拟电源 3.0V ~ 3.6V")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("LNA")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("射频天线接口，芯片输出阻抗为 50Ω。无需对芯片进行匹配，但建议保留π型匹配网络对天线进行匹配。")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("3")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("VDD3P3")]),t._v(" "),s("td",[t._v("P")]),t._v(" "),s("td",[t._v("功放电源 3.0V ~ 3.6V")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("4")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("VDD3P3")]),t._v(" "),s("td",[t._v("P")]),t._v(" "),s("td",[t._v("功放电源 3.0V ~ 3.6V")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("5")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("VDD_RTC")]),t._v(" "),s("td",[t._v("P")]),t._v(" "),s("td",[t._v("NC(1.1V)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("6")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("TOUT")]),t._v(" "),s("td",[t._v("I")]),t._v(" "),s("td",[t._v("ADC端(芯片内部ADC端口)，可用于检测VDD3P3(Pin3、Pin4)电源电压和TOUT(Pin6)的输入电压。(二者不可同时使用)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("7")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("CHIP_PU")]),t._v(" "),s("td",[t._v("I")]),t._v(" "),s("td",[t._v("芯片使能端。高电平：有效，芯片正常工作；低电平：芯片关闭，电流很小")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("XPD_DCDC")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("深度睡眠唤醒；GPIO16")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("MTMS")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("GPOIO14；HSPI_CLK")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("10")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("MTDI")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("GPIO12；HSPI_MISO")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("11")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("VDDPST")]),t._v(" "),s("td",[t._v("P")]),t._v(" "),s("td",[t._v("数字／IO电源(1.8V ~ 3.3V)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("12")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("MTCK")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("GPIO13；HSPI_MOSI；UART0_CTS")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("13")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("MTDO")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("GPIO15；HSPI_CS；UART0_RTS")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("14")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("GPIO2")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("可用作烧写Flash时UART1_TX；GPIO2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("15")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("GPIO0")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("GPIO0；SPI_CS2")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("16")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("GPIO4")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("GPIO4")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("17")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("VDDPST")]),t._v(" "),s("td",[t._v("P")]),t._v(" "),s("td",[t._v("数字／IO电源(1.8V ~ 3.3V)")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("18")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("SDIO_DATA_2")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("连接到SD_D2(串联200Ω)；PIHD；HSPIHD；GPIO9")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("19")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("SDIO_DATA_3")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("连接到SD_D3(串联200Ω)；SPIWP；HSPIWP；GPIO10")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("20")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("SDIO_CMD")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("连接到SD_CMD(串联200Ω)；SPI_CS0；GPIO11")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("21")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("SDIO_CLK")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("连接到SD_CLK(串联200Ω)；SPI_CKL；GPIO6")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("22")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("SDIO_DATA_0")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("连接到SD_D0(串联200Ω)；SPI_MSIO；GPIO7")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("23")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("SDIO_DATA_1")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("连接到SD_D1(串联200Ω)；SPI_MOSI；GPIO8")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("24")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("GPIO5")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("GPIO5")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("25")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("U0RXD")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("可用作烧写Flash时UART Rx；GPIO3")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("26")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("U0TXD")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("可用作烧写Flash时UART Tx；GPIO1；SPI_CS1")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("27")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("XTAL_OUT")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("连接晶振输出端，也可以用于提供BT的时钟输入")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("28")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("XTAL_IN")]),t._v(" "),s("td",[t._v("I/O")]),t._v(" "),s("td",[t._v("连接晶振输入端")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("29")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("VDDD")]),t._v(" "),s("td",[t._v("P")]),t._v(" "),s("td",[t._v("模拟电源 3.0V ~ 3.6V")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("30")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("VDDA")]),t._v(" "),s("td",[t._v("P")]),t._v(" "),s("td",[t._v("模拟电源 3.0V ~ 3.6V")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("31")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("RES12K")]),t._v(" "),s("td",[t._v("I")]),t._v(" "),s("td",[t._v("串联12kΩ电阻到地")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("32")]),t._v(" "),s("td",{staticStyle:{"text-align":"left"}},[t._v("EXT_RSTB")]),t._v(" "),s("td",[t._v("I")]),t._v(" "),s("td",[t._v("外部重置信号(低电平有效)")])])])])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(161),alt:""}})])},function(){var t=this,s=t._self._c;return s("p",[t._v("| "),s("strong",[t._v("Label")]),t._v(" | "),s("strong",[t._v("GPIO")]),t._v(" | "),s("strong",[t._v("Input")]),t._v(" | "),s("strong",[t._v("Output")]),t._v(" | "),s("strong",[t._v("Notes")]),t._v(" |")])},function(){var t=this,s=t._self._c;return s("table",[s("thead",[s("tr",[s("th",[s("strong",[t._v("D0")])]),t._v(" "),s("th",[s("strong",[t._v("GPIO16")])]),t._v(" "),s("th",[t._v("no interrupt")]),t._v(" "),s("th",[t._v("no PWM or I2C support")]),t._v(" "),s("th",[t._v("HIGH at boot used to wake up from deep sleep")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("strong",[t._v("D1")])]),t._v(" "),s("td",[s("strong",[t._v("GPIO5")])]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("often used as SCL (I2C)")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("D2")])]),t._v(" "),s("td",[s("strong",[t._v("GPIO4")])]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("often used as SDA (I2C)")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("D3")])]),t._v(" "),s("td",[s("strong",[t._v("GPIO0")])]),t._v(" "),s("td",[t._v("pulled up")]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("connected to FLASH button, boot fails if pulled LOW")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("D4")])]),t._v(" "),s("td",[s("strong",[t._v("GPIO2")])]),t._v(" "),s("td",[t._v("pulled up")]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("HIGH at boot connected to on-board LED, boot fails if pulled LOW")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("D5")])]),t._v(" "),s("td",[s("strong",[t._v("GPIO14")])]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("SPI (SCLK)")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("D6")])]),t._v(" "),s("td",[s("strong",[t._v("GPIO12")])]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("SPI (MISO)")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("D7")])]),t._v(" "),s("td",[s("strong",[t._v("GPIO13")])]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("SPI (MOSI)")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("D8")])]),t._v(" "),s("td",[s("strong",[t._v("GPIO15")])]),t._v(" "),s("td",[t._v("pulled to GND")]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("SPI (CS) Boot fails if pulled HIGH")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("RX")])]),t._v(" "),s("td",[s("strong",[t._v("GPIO3")])]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("RX pin")]),t._v(" "),s("td",[t._v("HIGH at boot")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("TX")])]),t._v(" "),s("td",[s("strong",[t._v("GPIO1")])]),t._v(" "),s("td",[t._v("TX pin")]),t._v(" "),s("td",[t._v("OK")]),t._v(" "),s("td",[t._v("HIGH at boot debug output at boot, boot fails if pulled LOW")])]),t._v(" "),s("tr",[s("td",[s("strong",[t._v("A0")])]),t._v(" "),s("td",[s("strong",[t._v("ADC0")])]),t._v(" "),s("td",[t._v("Analog Input")]),t._v(" "),s("td",[t._v("X")]),t._v(" "),s("td")])])])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(162),alt:""}})])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(163),alt:""}})])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(164),alt:""}})])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(165),alt:""}})])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    uint16           GPIO_Pin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO pin：配置某一号管脚 */")]),t._v("\n    GPIOMode_TypeDef GPIO_Mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO mode：设置输入输出模式 */")]),t._v("\n    GPIO_Pullup_IF   GPIO_Pullup"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO pullup：使能上拉 */")]),t._v("\n    GPIO_INT_TYPE    GPIO_IntrType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO interrupt type：是否使能中断，并配置中断模式 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" GPIO_ConfigTypeDef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    GPIO_PIN_INTR_DISABLE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< disable GPIO interrupt 失能中断 */")]),t._v("\n    GPIO_PIN_INTR_POSEDGE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO interrupt type : rising edge 上升沿触发 */")]),t._v("\n    GPIO_PIN_INTR_NEGEDGE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO interrupt type : falling edge 下降沿触发 */")]),t._v("\n    GPIO_PIN_INTR_ANYEDGE "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO interrupt type : bothe rising and falling edge 双边沿触发 */")]),t._v("\n    GPIO_PIN_INTR_LOLEVEL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO interrupt type : low level 输入低电平触发 */")]),t._v("\n    GPIO_PIN_INTR_HILEVEL "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO interrupt type : high level 输入高电平触发 */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" GPIO_INT_TYPE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    GPIO_Mode_Input "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0x0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("          "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO mode : Input */")]),t._v("\n    GPIO_Mode_Out_OD"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("               "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO mode : Output_OD */")]),t._v("\n    GPIO_Mode_Output "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("              "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO mode : Output */")]),t._v("\n    GPIO_Mode_Sigma_Delta "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("         "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**< GPIO mode : Sigma_Delta */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" GPIOMode_TypeDef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gpio.h"')])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("led_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    GPIO_ConfigTypeDef gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义 GPIO 初始化结构体")]),t._v("\n    gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_IntrType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PIN_INTR_DISABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否使能中断，并配置中断模式")]),t._v("\n    gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_Mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_Mode_Output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 GPIO2 口为输出端口")]),t._v("\n    gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_Pullup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PullUp_EN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 GPIO2 口上拉有效")]),t._v("\n    gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_Pin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_Pin_2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使能 GPIO2 口")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gpio_config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GPIO 初始化")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("user_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("led_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 创建一个任务，参数分别为：\n * - pvTaskCode：任务函数\n * - pcName: 任务名称\n * - usStackDepth: 任务堆栈\n * - pvParameters: 任务函数的参数\n * - uxPriority: 任务优先级\n * - pvCreatedTask: 任务句柄\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("xTaskCreate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("led_toggle_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"led_toggle_task"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("256")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("led_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    GPIO_ConfigTypeDef gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                       "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义 GPIO 初始化结构体")]),t._v("\n    gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_IntrType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PIN_INTR_DISABLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 是否使能中断，并配置中断模式")]),t._v("\n    gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_Mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_Mode_Output"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 GPIO 口为输出端口 /")]),t._v("\n    gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_Pullup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_PullUp_EN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("             "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 GPIO 口上拉有效")]),t._v("\n    gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GPIO_Pin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" GPIO_Pin_2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使能 GPIO IO 口")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("gpio_config")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("gpio_in_cfg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GPIO 初始化")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("led_toggle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取 GPIO2 管脚的电平状态")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("uint32_t")]),t._v(" bit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_INPUT_GET")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置 GPIO2 管脚输出电平")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GPIO_OUTPUT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("GPIO_Pin_2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"led toggle \\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("led_toggle_task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("pvParameters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("led_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("led_toggle")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 延时 500 ms")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vTaskDelay")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" portTICK_RATE_MS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("vTaskDelete")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])},function(){var t=this._self._c;return t("p",[t("strong",[this._v("什么是呼吸灯？")])])},function(){var t=this._self._c;return t("p",[t("strong",[this._v("什么是 PWM 控制信号？")])])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(166),alt:""}})])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(167),alt:""}})])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(168),alt:""}})])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(169),alt:""}})])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(170),alt:""}})])},function(){var t=this._self._c;return t("p",[t("img",{attrs:{src:n(171),alt:""}})])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PWM_0_OUT_IO_MUX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("PERIPHS_IO_MUX_MTDI_U")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PWM_0_OUT_IO_NUM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PWM_0_OUT_IO_FUNC")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("FUNC_GPIO12")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PWM_1_OUT_IO_MUX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("PERIPHS_IO_MUX_MTCK_U")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PWM_1_OUT_IO_NUM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PWM_1_OUT_IO_FUNC")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("FUNC_GPIO13")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PWM_2_OUT_IO_MUX")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("PERIPHS_IO_MUX_MTMS_U")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PWM_2_OUT_IO_NUM")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")])])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("PWM_2_OUT_IO_FUNC")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[t._v("FUNC_GPIO14")])]),t._v("\n\nLOCAL "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("os_timer_t")]),t._v(" rgb_light_timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** PWM占空比变量 */")]),t._v("\nLOCAL u8 set_duty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** PWM占空比加减标志 */")]),t._v("\nLOCAL bool flag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ESP8266_PWM_RUN")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("set_duty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            flag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" false"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("set_duty "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            flag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 更新 PWM 通道的占空比 */")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pwm_set_duty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set_duty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pwm_set_duty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set_duty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pwm_set_duty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set_duty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pwm_start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rgb_light_pwm_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    uint32 period "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uint32 duty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    uint32 io_info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("PWM_0_OUT_IO_MUX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PWM_0_OUT_IO_FUNC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PWM_0_OUT_IO_NUM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GPIO12")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("PWM_1_OUT_IO_MUX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PWM_1_OUT_IO_FUNC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PWM_1_OUT_IO_NUM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GPIO13")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("PWM_2_OUT_IO_MUX"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PWM_2_OUT_IO_FUNC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PWM_2_OUT_IO_NUM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GPIO14")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 配置 PWM 的周期为 1000us，占空比为 0，PWM 通道数量为 3")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pwm_init")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("period"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" duty"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" io_info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("os_timer_disarm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("rgb_light_timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("os_timer_setfn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("rgb_light_timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("os_timer_func_t")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ESP8266_PWM_RUN"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("os_timer_arm")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("rgb_light_timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" true"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])}],e=n(1),_=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"nodemcu-esp8266-gpio-和-pwm-学习"}},[t._v("NodeMCU ESP8266 GPIO 和 PWM 学习")]),t._v(" "),s("h2",{attrs:{id:"前言"}},[t._v("前言")]),t._v(" "),s("p",[t._v("入门任何一款 MCU，GPIO 是必须掌握的基础知识，虽然每款 MCU GPIO 的数量和能力各不一样，但是使用用法是基本一样的。本文将通过两个小实验去理解 GPIO 中的核心知识，通过 ESP8266 了解一下 GPIO 中的基本概念，从而更好的掌握 ESP8266 其他的功能。通用输入/输出 (GPIO) 是集成电路上的一个引脚功能，它既可以是输入引脚，也可以是输出引脚，这些功能均可以在编写程序时进行控制。")]),t._v(" "),s("h2",{attrs:{id:"esp8266-与-nodemcu-管脚"}},[t._v("ESP8266 与 NodeMCU 管脚")]),t._v(" "),s("h3",{attrs:{id:"esp8266-管脚定义"}},[t._v("ESP8266 管脚定义")]),t._v(" "),s("p",[t._v("ESP8266 共有16个通用 IO，管脚的位置和管脚的分别为：")]),t._v(" "),t._m(0),t._v(" "),t._m(1),t._v(" "),s("p",[t._v("其中，在四线 (QUAD) 模式 flash 下，有六个 IO 于 flash 通讯；在两线 (DUAL) 模式 flash 下，有四个 IO 于与 flash 通讯。")]),t._v(" "),s("h3",{attrs:{id:"nodemcu-管脚映射图"}},[t._v("NodeMCU 管脚映射图")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("NodeMCU 开发板引脚的编号与 NodeMCU 的内部 GPIO 编号不是一个编号，例如板上的 D4 对应的是  ESP8266 的 GPIO 引脚 2，可以通过 GPIO_Pin_2 变量引用。\n根据 ESP8266 的系统 (SoC) 设计，其内部包含了处理器芯片等组件，处理器大约有 16 条 GPIO 线路，其中一些 GPIO 规定默认用于与其他内部组件进行通信，比如与内部闪存的通信，GPIO6 至 GPIO11 通常连接到 ESP8266 板上的 Flash 芯片，不建议使用这些引脚，这样我们大约还有 11 个GPIO引脚可按常规 GPIO 进行使用，在这 11 个针脚中，又有 2 个针脚预留给串口 RX 和 TX。因此最后只剩下 9 个通用 I/O 引脚，即 D0 到 D8。")]),t._v(" "),t._m(5),t._v(" "),s("p",[t._v("在实际使用中，从上图我们可以看到一些 GPIO 引脚同时兼备了其他功能，如 RX, TX, SD2, SD3，这些引脚大多不作为 GPIO 使用，因为它们可用于其他进程。极端情况下，可使用 SD3 (D12) 引脚，D12 引脚主要用于响应 GPIO/PWM/中断等功能。需要注意的是，D0|GPIO16 引脚只能作为 GPIO 读/写使用，不支持任何特殊功能。")]),t._v(" "),s("h2",{attrs:{id:"点亮-nodemcu-开发板上的-led"}},[t._v("点亮 NodeMCU 开发板上的 LED")]),t._v(" "),s("h3",{attrs:{id:"gpio2-引脚电路图"}},[t._v("GPIO2 引脚电路图")]),t._v(" "),s("p",[t._v("点亮开发板上的 LED 灯是嵌入式编程开发中的 “Hello, World”。\nNodeMCU ESP8266 开发板有两个 LED 灯，一个 LED 位于 ESP-12 模组的 PCB 上；一个 LED 位于 NodeMCU 的 PCB 上。")]),t._v(" "),t._m(6),t._v(" "),s("p",[t._v("ESP-12 模组板载 LED 引脚对应 GPIO2/TXD1，电路图如下：")]),t._v(" "),t._m(7),t._v(" "),s("p",[t._v("NodeMCU 板载 LED 引脚对应 GPIO16，电路图如下：")]),t._v(" "),t._m(8),t._v(" "),s("p",[t._v("两个 LED 都在反向模式下工作，关于引脚电平-当引脚高时，LED是关闭的；当引脚低时，LED是亮的。GPIO 0-15 引脚都配有内置上拉电阻，可以通过 GPIO 配置使能上拉。")]),t._v(" "),s("h3",{attrs:{id:"配置-gpio2-引脚"}},[t._v("配置 GPIO2 引脚")]),t._v(" "),s("p",[t._v("GPIO 的初始化通过一个结构体来配置，如下：")]),t._v(" "),t._m(9),s("p",[t._v("中断模式配置结构体：")]),t._v(" "),t._m(10),s("p",[t._v("输入输出模式配置结构体：")]),t._v(" "),t._m(11),s("p",[t._v("下面我们以控制 GPIO2 连接的 LED 灯为例加以说明。设置 GPIO2 为不开启中端，输出端口并使能上拉：")]),t._v(" "),t._m(12),s("h3",{attrs:{id:"gpio2-led-灯闪烁实例"}},[t._v("GPIO2 LED 灯闪烁实例")]),t._v(" "),s("video",{attrs:{src:"https://www.yuque.com/attachments/yuque/0/2020/mp4/696445/1607852540237-a40dfabe-db44-4358-92fc-6c783facd43b.mp4?_lake_card=%7B%22uid%22%3A%221607852544188-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2020%2Fmp4%2F696445%2F1607852540237-a40dfabe-db44-4358-92fc-6c783facd43b.mp4%22%2C%22name%22%3A%221607851695610384.mp4%22%2C%22size%22%3A572337%2C%22type%22%3A%22video%2Fmp4%22%2C%22ext%22%3A%22mp4%22%2C%22progress%22%3A%7B%22percent%22%3A99%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22eEwMS%22%2C%22card%22%3A%22file%22%7D",controls:"controls"}},[t._v("\nyour browser does not support the video tag\n")]),t._v(" "),s("p",[t._v("如果我们想实现 LED 闪烁的效果，我们可以定义一个任务来实现：")]),t._v(" "),t._m(13),s("p",[t._v("任务函数实现：")]),t._v(" "),t._m(14),s("h2",{attrs:{id:"制作-rgb-三色-led-呼吸灯"}},[t._v("制作 RGB 三色 LED 呼吸灯")]),t._v(" "),s("h3",{attrs:{id:"pwm-实现呼吸灯"}},[t._v("PWM 实现呼吸灯")]),t._v(" "),t._m(15),t._v(" "),s("p",[t._v("呼吸灯最早是由苹果公司发明并应用于笔记本睡眠提示上，一经展出，立刻吸引众多科技厂商争相效仿。呼吸灯是指灯在微控器控制之下完成由暗到亮的逐渐变化，再由亮到暗的逐渐变化，亮暗的节奏感觉像是人在呼吸。\n用微控器做呼吸灯是利用频率来控制呼吸灯的呼吸时间，用占空比来控制灯的亮度。也就是采用 PWM 的方式，在固定的频率下，采用占空比的方式来实现 LED 亮度的变化。占空比为 0，LED 灯不亮，占空比为 100%，则 LED 灯最亮。所以将占空比从 0 到 100%，再从 100% 到 0 不断变化，就可以实现 LED 灯实现特效呼吸。")]),t._v(" "),t._m(16),t._v(" "),s("p",[t._v("PWM（pulse-width modulation）脉冲宽度调制，MCU（微控制器）通过对开关器件的通断进行控制，使输出端得到一系列幅值相等的脉冲，用这些脉冲来代替正弦波或所需的波形。当我们需要连续控制电压变化，实现呼吸灯或者电机转速的时候，就要用到PWM，如下图所示。")]),t._v(" "),t._m(17),t._v(" "),s("h3",{attrs:{id:"电路连接图"}},[t._v("电路连接图")]),t._v(" "),s("p",[t._v("NodeMCU 套件上的 PWM 引脚如下图所示：")]),t._v(" "),t._m(18),t._v(" "),s("p",[t._v("下面我们用 NodeMCU D5 (GPIO14)、D6 (GPIO12)、D7 (GPIO13) 这三个支持 PWM 功能的引脚去控制 RGB 三色 LED 灯。电路连接图如下：")]),t._v(" "),t._m(19),t._v(" "),s("p",[t._v("我们按照电路图接好电路会发现 RGB 三色灯均发亮了，这是因为 GPIO12、GPIO13、GPIO14 UBOOT电平默认是高电平。")]),t._v(" "),s("h3",{attrs:{id:"呼吸灯代码实现"}},[t._v("呼吸灯代码实现")]),t._v(" "),s("p",[t._v("PWM 驱动接⼝函数不能跟 hw_timer.c 的接⼝同时使⽤，因为它们共⽤了同⼀个硬件定时器。")]),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),s("p",[t._v("实现效果如下：")]),t._v(" "),s("video",{attrs:{src:"https://www.yuque.com/attachments/yuque/0/2020/mp4/696445/1607877529215-867d2702-fb06-464f-99f3-dfb8f7428866.mp4?_lake_card=%7B%22uid%22%3A%221607877532440-0%22%2C%22src%22%3A%22https%3A%2F%2Fwww.yuque.com%2Fattachments%2Fyuque%2F0%2F2020%2Fmp4%2F696445%2F1607877529215-867d2702-fb06-464f-99f3-dfb8f7428866.mp4%22%2C%22name%22%3A%221607877484146039.mp4%22%2C%22size%22%3A963402%2C%22type%22%3A%22video%2Fmp4%22%2C%22ext%22%3A%22mp4%22%2C%22progress%22%3A%7B%22percent%22%3A99%7D%2C%22status%22%3A%22done%22%2C%22percent%22%3A0%2C%22id%22%3A%22qxLXy%22%2C%22card%22%3A%22file%22%7D",controls:"controls"}},[t._v("\nyour browser does not support the video tag\n")]),t._v(" "),s("h2",{attrs:{id:"参考"}},[t._v("参考")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://blog.csdn.net/qq_41714908/article/details/105223260",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESP8266学习历程——GPIO配置"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://lowvoltage.github.io/2017/07/09/Onboard-LEDs-NodeMCU-Got-Two",target:"_blank",rel:"noopener noreferrer"}},[t._v("Onboard LEDs? NodeMCU's got two!"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"http://blog.gqylpy.com/gqy/20228/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ESP8266开发之旅 基础篇③ ESP8266与Arduino的开发说明"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/56616166",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何在ESP8266上实现变色呼吸灯效果？"),s("OutboundLink")],1)])]),t._v(" "),s("site-footer")],1)}),a,!1,null,null,null);s.default=_.exports}}]);